{
  "name": "crm-system",
  "version": "1.0.0",
  "type": "module",
  "description": "Customer Relationship Management",
  "engines": {
    "node": ">=20.13.1",
    "npm": ">=10.5.2"
  },
  "main": "server.js",
  "scripts": {
    "clean": "docker ps -aq | xargs -r docker rm && docker system prune -af",
    "clean:start": "npm run clean && docker compose -f docker-compose.prod.yml up -d --build",
    "start": "docker compose -f docker-compose.prod.yml up -d",
    "stop": "docker compose -f docker-compose.prod.yml down",
    "log": "docker compose -f docker-compose.prod.yml logs -f",
    "restart": "docker compose -f docker-compose.prod.yml restart",
    "status": "docker stats",
    "backup": "docker compose -f docker-compose.prod.yml exec app npm run raw:prod:backup",
    "restore": "docker compose -f docker-compose.prod.yml exec app npm run raw:prod:restore",

    "dev:start": "docker compose -f docker-compose.dev.yml up -d",
    "dev:stop": "docker compose -f docker-compose.dev.yml down",
    "dev:log": "docker compose -f docker-compose.dev.yml logs -f",
    "dev:backup": "docker compose -f docker-compose.dev.yml exec app npm run raw:dev:backup",
    "dev:restore": "docker compose -f docker-compose.dev.yml exec app npm run raw:dev:restore",
    "dev:test": "echo \"Error: no test specified\" && exit 1",

    "raw:dev:start": "dotenv -e .env.development -- npx tsx watch src/server.ts",
    "raw:dev:build": "npm run prisma:generate:dev && rollup -c",
    "raw:start": "dotenv -e .env.production -- node dist/server.js",
    "raw:build": "npm run prisma:generate:prod && rollup -c",
    "prebuild": "npx rimraf dist",

    "raw:dev:backup": "dotenv -e .env.development -- node scripts/backup/run-backup.js",
    "raw:dev:restore": "dotenv -e .env.development -- node scripts/backup/run-restore.js",
    "raw:prod:backup": "dotenv -e .env.production -- node scripts/backup/run-backup.js",
    "raw:prod:restore": "dotenv -e .env.production -- node scripts/backup/run-restore.js",
    
    "prisma:pull:dev": "dotenv -e .env.development -- prisma db pull",
    "prisma:pull:prod": "dotenv -e .env.production -- prisma db pull",
    "prisma:push:dev": "dotenv -e .env.development -- prisma db push && node scripts/prisma/push-views.js",
    "prisma:push:prod": "dotenv -e .env.production -- prisma db push && node scripts/prisma/push-views.js",
    "prisma:generate:dev": "dotenv -e .env.development -- prisma generate",
    "prisma:generate:prod": "dotenv -e .env.production -- prisma generate"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@prisma/client": "^5.1.1",
    "chalk": "^4.1.2",
    "cors": "^2.8.5",
    "cross-env": "^7.0.3",
    "csv-parser": "^3.0.0",
    "csv-writer": "^1.6.0",
    "dotenv": "^16.4.5",
    "express": "^4.19.2",
    "express-async-errors": "^3.1.1",
    "jsonc-parser": "^3.3.1",
    "mysql2": "^3.11.4",
    "type-fest": "^4.27.0",
    "zod": "3.21.1"
  },
  "devDependencies": {
    "@prisma/internals": "^5.1.1",
    "@prisma/sdk": "^4.0.0",
    "@rollup/plugin-commonjs": "^28.0.1",
    "@rollup/plugin-node-resolve": "^15.3.0",
    "@rollup/plugin-typescript": "^12.1.1",
    "@types/cors": "^2.8.17",
    "@types/express": "^5.0.0",
    "@types/node": "^22.9.0",
    "dotenv-cli": "^7.4.2",
    "minimist": "^1.2.8",
    "nodemon": "^3.0.2",
    "prisma": "^5.1.1",
    "rollup": "^4.27.3",
    "ts-node": "^10.9.2",
    "tsc-alias": "^1.8.10",
    "tsconfig-paths": "^4.2.0",
    "tslib": "^2.8.1",
    "typescript": "^5.6.3"
  }
}
