generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

generator zod {
  provider               = "zod-prisma-types"
  output                 = "./zod-schemas"
  createInputTypes       = "true"
  addInputTypeValidation = "true"
  createModelTypes       = "true"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model approval_role {
  role_id       Int    @id @default(autoincrement())
  role_name String @db.VarChar(45) /// @zod.string({ required_error: "role_name은 필수 입력값입니다" }).min(1).max(45, { message: "role_name은 45자를 초과할 수 없습니다" })
  upper_role_id Int?

  @@index([upper_role_id], map: "fk_approval_role_approval_role1_idx")
}

model call {
  call_id                  Int       @id @default(autoincrement())
  call_type_id             Int
  client_branch_id         Int
  requester_name String @db.VarChar(50) /// @zod.string({ required_error: "requester_name은 필수 입력값입니다" }).min(1).max(50, { message: "requester_name은 50자를 초과할 수 없습니다" })
  requester_num String @db.VarChar(20) /// @zod.string({ required_error: "requester_num은 필수 입력값입니다" }).min(1).max(20, { message: "requester_num은 20자를 초과할 수 없습니다" })
  requester_black_consumer Int @db.TinyInt /// @zod.number({ required_error: "requester_black_consumer은 필수 입력값입니다" }).int().min(0).max(1)
  device_id                Int?
  detail String @db.VarChar(200) /// @zod.string({ required_error: "detail은 필수 입력값입니다" }).min(1).max(200, { message: "detail은 200자를 초과할 수 없습니다" })
  state String @db.VarChar(45) /// @zod.string({ required_error: "state은 필수 입력값입니다" }).min(1).max(45, { message: "state은 45자를 초과할 수 없습니다" })
  received_at              DateTime  @db.Timestamp(0)
  receiver_id              Int
  transferred_at           DateTime? @db.Timestamp(0)
  transferred_dept_id      Int?
  assigner_id              Int?
  completed_at             DateTime? @db.Timestamp(0)

  @@index([call_type_id], map: "fk_call_call_type1_idx")
  @@index([client_branch_id], map: "fk_call_client_branch1_idx")
  @@index([transferred_dept_id], map: "fk_call_dept1_idx")
  @@index([device_id], map: "fk_call_device1_idx")
  @@index([receiver_id], map: "fk_call_user1_idx")
  @@index([assigner_id], map: "fk_call_user2_idx")
}

model call_type {
  call_type_id        Int    @id @default(autoincrement())
  call_type_name String @db.VarChar(50) /// @zod.string({ required_error: "call_type_name은 필수 입력값입니다" }).min(1).max(50, { message: "call_type_name은 50자를 초과할 수 없습니다" })
  parent_call_type_id Int?

  @@index([parent_call_type_id], map: "fk_call_type_call_type1_idx")
}

model client {
  client_id                     Int    @id @default(autoincrement())
  parent_client_id              Int?
  default_client_branch_rate_id Int
  client_name String @db.VarChar(45) /// @zod.string({ required_error: "client_name은 필수 입력값입니다" }).min(1).max(45, { message: "client_name은 45자를 초과할 수 없습니다" })
  is_active Int @db.TinyInt /// @zod.number({ required_error: "is_active은 필수 입력값입니다" }).int().min(0).max(1)

  @@index([parent_client_id], map: "fk_client_client1_idx")
  @@index([default_client_branch_rate_id], map: "fk_client_client_branch_rate1_idx")
}

model client_branch {
  client_branch_id      Int     @id @default(autoincrement())
  sigungu_id            Int
  mgmt_dept_id          Int
  client_id             Int
  client_branch_name String @db.VarChar(100) /// @zod.string({ required_error: "client_branch_name은 필수 입력값입니다" }).min(1).max(100, { message: "client_branch_name은 100자를 초과할 수 없습니다" })
  client_branch_rate_id Int
  branch_mgr_name String? @db.VarChar(45) /// @zod.string.max(45, { message: "branch_mgr_name은 45자를 초과할 수 없습니다" })
  branch_mgr_mobile_num String? @db.VarChar(45) /// @zod.string.max(45, { message: "branch_mgr_mobile_num은 45자를 초과할 수 없습니다" })
  branch_mgr_office_num String? @db.VarChar(45) /// @zod.string.max(45, { message: "branch_mgr_office_num은 45자를 초과할 수 없습니다" })
  branch_mgr_email String? @db.VarChar(45) /// @zod.string.max(45, { message: "branch_mgr_email은 45자를 초과할 수 없습니다" })
  is_active Int @db.TinyInt /// @zod.number({ required_error: "is_active은 필수 입력값입니다" }).int().min(0).max(1)
  remote_support Int @db.TinyInt /// @zod.number({ required_error: "remote_support은 필수 입력값입니다" }).int().min(0).max(1)
  push_alert Int @db.TinyInt /// @zod.number({ required_error: "push_alert은 필수 입력값입니다" }).int().min(0).max(1)

  @@index([client_id], map: "fk_client_branch_client1_idx")
  @@index([client_branch_rate_id], map: "fk_client_branch_client_branch_rate1_idx")
  @@index([mgmt_dept_id], map: "fk_client_branch_dept1_idx")
  @@index([sigungu_id], map: "fk_client_branch_sigungu1_idx")
}

model client_rate {
  client_rate_id Int     @id @default(autoincrement())
  rate_type String @db.VarChar(10) /// @zod.string({ required_error: "rate_type은 필수 입력값입니다" }).min(1).max(10, { message: "rate_type은 10자를 초과할 수 없습니다" })
  rate_detail String? @db.VarChar(45) /// @zod.string.max(45, { message: "rate_detail은 45자를 초과할 수 없습니다" })
}

model consumable_model {
  consumable_model_id Int    @id @default(autoincrement())
  manufacturer String @db.VarChar(100) /// @zod.string({ required_error: "manufacturer은 필수 입력값입니다" }).min(1).max(100, { message: "manufacturer은 100자를 초과할 수 없습니다" })
  consumable_name String @db.VarChar(100) /// @zod.string({ required_error: "consumable_name은 필수 입력값입니다" }).min(1).max(100, { message: "consumable_name은 100자를 초과할 수 없습니다" })
  consumable_type String @db.VarChar(100) /// @zod.string({ required_error: "consumable_type은 필수 입력값입니다" }).min(1).max(100, { message: "consumable_type은 100자를 초과할 수 없습니다" })
}

model dept {
  dept_id        Int    @id @default(autoincrement())
  parent_dept_id Int?
  dept_name String @db.VarChar(100) /// @zod.string({ required_error: "dept_name은 필수 입력값입니다" }).min(1).max(100, { message: "dept_name은 100자를 초과할 수 없습니다" })

  @@index([parent_dept_id], map: "fk_dept_dept1_idx")
}

model device {
  device_id              Int      @id @default(autoincrement())
  device_model_id        Int
  owner_dept_id          Int
  mgmt_dept_id           Int
  serial String @db.VarChar(50) /// @zod.string({ required_error: "serial은 필수 입력값입니다" }).min(1).max(50, { message: "serial은 50자를 초과할 수 없습니다" })
  regi_date              DateTime @db.Date
  mac String @db.VarChar(50) /// @zod.string({ required_error: "mac은 필수 입력값입니다" }).min(1).max(50, { message: "mac은 50자를 초과할 수 없습니다" })
  last_inspection_log_id Int?
  last_location_log_id   Int?
  status_id              Int      @default(1)

  @@index([owner_dept_id], map: "fk_device_dept1_idx")
  @@index([mgmt_dept_id], map: "fk_device_dept2_idx")
  @@index([status_id], map: "fk_device_device_condition1_idx")
  @@index([last_location_log_id], map: "fk_device_device_location_log1_idx")
  @@index([device_model_id], map: "fk_device_device_model1_idx")
  @@index([last_inspection_log_id], map: "fk_device_inspection_log1_idx")
}

model device_approval {
  approval_id             Int       @id @default(autoincrement())
  approval_type_id        Int
  sub_approval_id         Int?
  requester_id            Int
  request_at              DateTime  @db.Timestamp(0)
  approver_role_id        Int
  origin_location_id      Int?
  destination_location_id Int?
  approver_id             Int?
  approve_at              DateTime? @db.Timestamp(0)
  is_approved Int? @db.TinyInt /// @zod.number.int().min(0).max(1)

  @@index([approver_role_id], map: "fk_approval_approver_group1_idx")
  @@index([sub_approval_id], map: "fk_device_approval_device_approval1_idx")
  @@index([approval_type_id], map: "fk_device_approval_device_approval_type1_idx")
  @@index([origin_location_id], map: "fk_device_approval_location1_idx")
  @@index([destination_location_id], map: "fk_device_approval_location2_idx")
  @@index([requester_id], map: "fk_device_approval_user1_idx")
  @@index([approver_id], map: "fk_device_approval_user2_idx")
}

model device_approval_type {
  approval_type_id   Int    @id @default(autoincrement())
  approval_type_name String @db.VarChar(45) /// @zod.string({ required_error: "approval_type_name은 필수 입력값입니다" }).min(1).max(45, { message: "approval_type_name은 45자를 초과할 수 없습니다" })
}

model device_consumable_compatibility {
  device_model_id     Int
  consumable_model_id Int

  @@id([device_model_id, consumable_model_id])
}

model device_driver {
  device_driver_id     Int     @id @default(autoincrement())
  device_model_id      Int
  manufacturer String? @db.VarChar(100) /// @zod.string.max(100, { message: "manufacturer은 100자를 초과할 수 없습니다" })
  printer_language String? @db.VarChar(45) /// @zod.string.max(45, { message: "printer_language은 45자를 초과할 수 없습니다" })
  install_file_address String? @db.VarChar(200) /// @zod.string.max(200, { message: "install_file_address은 200자를 초과할 수 없습니다" })

  @@index([device_model_id], map: "fk_driver_device_model1_idx")
}

model device_inspection_log {
  device_inspection_log_id Int                           @id @default(autoincrement())
  device_id                Int
  inspector_id             Int
  inspection_date          DateTime                      @db.Date
  visit_type String @db.VarChar(45) /// @zod.string({ required_error: "visit_type은 필수 입력값입니다" }).min(1).max(45, { message: "visit_type은 45자를 초과할 수 없습니다" })
  call_id                  Int?
  FL                       Int?
  FS                       Int?
  BL                       Int?
  BS                       Int?
  toner_count_YE           Int?
  toner_count_MA           Int?
  toner_count_CY           Int?
  toner_count_BK           Int?
  toner_stock_YE           Int?
  toner_stock_MA           Int?
  toner_stock_CY           Int?
  toner_stock_BK           Int?
  toner_deliver_YE         Int?
  toner_deliver_CY         Int?
  toner_deliver_MA         Int?
  toner_deliver_BK         Int?
  drum_count_YE            Int?
  drum_count_MA            Int?
  drum_count_CY            Int?
  drum_count_BK            Int?
  drum_replacement_detail String? @db.VarChar(50) /// @zod.string.max(50, { message: "drum_replacement_detail은 50자를 초과할 수 없습니다" })
  status                   device_inspection_log_status?

  @@index([device_id], map: "fk_device_history_device_idx")
  @@index([inspector_id], map: "fk_device_inspection_log_user1_idx")
  @@index([call_id], map: "fk_device_log_call1_idx")
}

model device_install_info {
  device_id    Int     @id
  installer_id Int
  mgmt_num String @db.VarChar(50) /// @zod.string({ required_error: "mgmt_num은 필수 입력값입니다" }).min(1).max(50, { message: "mgmt_num은 50자를 초과할 수 없습니다" })
  ip_address String? @db.VarChar(50) /// @zod.string.max(50, { message: "ip_address은 50자를 초과할 수 없습니다" })
  subnet_mask String? @db.VarChar(50) /// @zod.string.max(50, { message: "subnet_mask은 50자를 초과할 수 없습니다" })
  gateway String? @db.VarChar(50) /// @zod.string.max(50, { message: "gateway은 50자를 초과할 수 없습니다" })
  dns1 String? @db.VarChar(50) /// @zod.string.max(50, { message: "dns1은 50자를 초과할 수 없습니다" })
  dns2 String? @db.VarChar(50) /// @zod.string.max(50, { message: "dns2은 50자를 초과할 수 없습니다" })

  @@index([device_id], map: "fk_device_install_info_device1_idx")
  @@index([installer_id], map: "fk_device_install_info_user1_idx")
}

model device_location_log {
  device_location_log_id Int      @id @default(autoincrement())
  device_id              Int
  location_date          DateTime @db.Date
  location_id            Int
  location_detail String? @db.VarChar(200) /// @zod.string.max(200, { message: "location_detail은 200자를 초과할 수 없습니다" })

  @@index([device_id], map: "fk_device_location_log_device1_idx")
  @@index([location_id], map: "fk_device_location_log_location1_idx")
}

model device_model {
  device_model_id Int    @id @default(autoincrement())
  model_name String @db.VarChar(100) /// @zod.string({ required_error: "model_name은 필수 입력값입니다" }).min(1).max(100, { message: "model_name은 100자를 초과할 수 없습니다" })
  manufacturer String @db.VarChar(100) /// @zod.string({ required_error: "manufacturer은 필수 입력값입니다" }).min(1).max(100, { message: "manufacturer은 100자를 초과할 수 없습니다" })
  color_support Int @db.TinyInt /// @zod.number({ required_error: "color_support은 필수 입력값입니다" }).int().min(0).max(1)
}

model device_option {
  device_option_id      Int                         @id @default(autoincrement())
  option_model_id       Int
  serial String? @db.VarChar(50) /// @zod.string.max(50, { message: "serial은 50자를 초과할 수 없습니다" })
  is_active Int @db.TinyInt /// @zod.number({ required_error: "is_active은 필수 입력값입니다" }).int().min(0).max(1)
  location_type         device_option_location_type
  location_warehouse_id Int?
  location_device_id    Int?

  @@index([location_device_id], map: "fk_device_option_device1_idx")
  @@index([option_model_id], map: "fk_device_option_device_option_model1_idx")
  @@index([location_warehouse_id], map: "fk_device_option_warehouse1_idx")
}

model device_option_compatibility {
  device_model_id Int
  option_model_id Int

  @@id([device_model_id, option_model_id])
}

model device_status {
  status_id   Int    @id @default(autoincrement())
  status_name String @db.VarChar(45) /// @zod.string({ required_error: "status_name은 필수 입력값입니다" }).min(1).max(45, { message: "status_name은 45자를 초과할 수 없습니다" })
}

model inspection_approval {
  approval_id              Int       @id @default(autoincrement())
  requester_id             Int
  request_at               DateTime  @db.Timestamp(0)
  approver_role_id         Int?
  device_inspection_log_id Int
  approver_id              Int?
  approved_at              DateTime? @db.Timestamp(0)
  is_approved Int? @db.TinyInt /// @zod.number.int().min(0).max(1)

  @@index([approver_role_id], map: "fk_inspection_approval_approval_role1_idx")
  @@index([device_inspection_log_id], map: "fk_inspection_approval_device_inspection_log1_idx")
  @@index([approver_id], map: "fk_inspection_approval_user1_idx")
  @@index([requester_id], map: "fk_inspection_approval_user2_idx")
}

model location {
  location_id      Int                    @id @default(autoincrement())
  location_type    location_location_type
  warehouse_id     Int?
  client_branch_id Int?

  @@index([client_branch_id], map: "fk_location_client_branch1_idx")
  @@index([warehouse_id], map: "fk_location_warehouse1_idx")
}

model option_model {
  option_model_id   Int    @id @default(autoincrement())
  option_model_name String @db.VarChar(100) /// @zod.string({ required_error: "option_model_name은 필수 입력값입니다" }).min(1).max(100, { message: "option_model_name은 100자를 초과할 수 없습니다" })
  option_type String @db.VarChar(45) /// @zod.string({ required_error: "option_type은 필수 입력값입니다" }).min(1).max(45, { message: "option_type은 45자를 초과할 수 없습니다" })
  manufacturer String @db.VarChar(100) /// @zod.string({ required_error: "manufacturer은 필수 입력값입니다" }).min(1).max(100, { message: "manufacturer은 100자를 초과할 수 없습니다" })
}

model sido {
  sido_id   Int     @id @default(autoincrement())
  sido_name String? @db.VarChar(45) /// @zod.string.max(45, { message: "sido_name은 45자를 초과할 수 없습니다" })
}

model sigungu {
  sigungu_id   Int    @id @default(autoincrement())
  sigungu_name String @db.VarChar(45) /// @zod.string({ required_error: "sigungu_name은 필수 입력값입니다" }).min(1).max(45, { message: "sigungu_name은 45자를 초과할 수 없습니다" })
  sido_id      Int

  @@index([sido_id], map: "fk_sigungu_sido1_idx")
}

model user {
  user_id          Int             @id @default(autoincrement())
  user_name String @db.VarChar(45) /// @zod.string({ required_error: "user_name은 필수 입력값입니다" }).min(1).max(45, { message: "user_name은 45자를 초과할 수 없습니다" })
  login_id         String          @unique(map: "login_id_UNIQUE") @db.VarChar(45)
  password String @db.VarChar(50) /// @zod.string({ required_error: "password은 필수 입력값입니다" }).min(1).max(50, { message: "password은 50자를 초과할 수 없습니다" })
  mobile_num String? @db.VarChar(20) /// @zod.string.max(20, { message: "mobile_num은 20자를 초과할 수 없습니다" })
  office_num String? @db.VarChar(20) /// @zod.string.max(20, { message: "office_num은 20자를 초과할 수 없습니다" })
  email String? @db.VarChar(100) /// @zod.string.max(100, { message: "email은 100자를 초과할 수 없습니다" })
  modified_at      DateTime?       @default(now()) @db.Timestamp(0)
  dept_id          Int
  approval_role_id Int?
  position_id      Int
  created_at       DateTime        @default(now()) @db.Timestamp(0)
  is_active Int @db.TinyInt /// @zod.number({ required_error: "is_active은 필수 입력값입니다" }).int().min(0).max(1)
  permission       user_permission @default(user)

  @@index([approval_role_id], map: "fk_user_approval_role1_idx")
  @@index([dept_id], map: "fk_user_dept1_idx")
  @@index([position_id], map: "fk_user_user_position1_idx")
}

model user_position {
  user_position_id Int    @id @default(autoincrement())
  position_name String @db.VarChar(45) /// @zod.string({ required_error: "position_name은 필수 입력값입니다" }).min(1).max(45, { message: "position_name은 45자를 초과할 수 없습니다" })
}

model user_role_assignment {
  role_id     Int
  approver_id Int

  @@id([role_id, approver_id])
}

model warehouse {
  warehouse_id   Int    @id @default(autoincrement())
  warehouse_name String @db.VarChar(100) /// @zod.string({ required_error: "warehouse_name은 필수 입력값입니다" }).min(1).max(100, { message: "warehouse_name은 100자를 초과할 수 없습니다" })
  mgmt_dept_id   Int

  @@index([mgmt_dept_id], map: "fk_warehouse_dept1_idx")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view v_client {
  client_id                     Int     @unique @default(0)
  client_name String @db.VarChar(45) /// @zod.string({ required_error: "client_name은 필수 입력값입니다" }).min(1).max(45, { message: "client_name은 45자를 초과할 수 없습니다" })
  parent_client_id Int? @db.TinyInt /// @zod.number.int().min(0).max(1) /// @zod.number({ required_error: "default_client_branch_rate_id은 필수 입력값입니다" }).int().min(0).max(1)
  parent_client_name String? @db.VarChar(45) /// @zod.string.max(45, { message: "parent_client_name은 45자를 초과할 수 없습니다" })
  rate_type String? @db.VarChar(10) /// @zod.string.max(10, { message: "rate_type은 10자를 초과할 수 없습니다" })
  rate_detail String? @db.VarChar(45) /// @zod.string.max(45, { message: "rate_detail은 45자를 초과할 수 없습니다" })
  branch_count                  BigInt  @default(0)
}

view v_client_branch {
  client_branch_id      Int     @unique @default(0)
  client_branch_name String @db.VarChar(100) /// @zod.string({ required_error: "client_branch_name은 필수 입력값입니다" }).min(1).max(100, { message: "client_branch_name은 100자를 초과할 수 없습니다" })
  client_id             Int
  sigungu_id            Int
  mgmt_dept_id          Int
  client_branch_rate_id Int
  branch_mgr_name String? @db.VarChar(45) /// @zod.string.max(45, { message: "branch_mgr_name은 45자를 초과할 수 없습니다" })
  branch_mgr_mobile_num String? @db.VarChar(45) /// @zod.string.max(45, { message: "branch_mgr_mobile_num은 45자를 초과할 수 없습니다" })
  branch_mgr_office_num String? @db.VarChar(45) /// @zod.string.max(45, { message: "branch_mgr_office_num은 45자를 초과할 수 없습니다" })
  branch_mgr_email String? @db.VarChar(45) /// @zod.string.max(45, { message: "branch_mgr_email은 45자를 초과할 수 없습니다" })
  is_active Int @db.TinyInt /// @zod.number({ required_error: "is_active은 필수 입력값입니다" }).int().min(0).max(1)
  remote_support Int @db.TinyInt /// @zod.number({ required_error: "remote_support은 필수 입력값입니다" }).int().min(0).max(1)
  push_alert Int @db.TinyInt /// @zod.number({ required_error: "push_alert은 필수 입력값입니다" }).int().min(0).max(1)
  client_name String? @db.VarChar(45) /// @zod.string.max(45, { message: "client_name은 45자를 초과할 수 없습니다" })
  sigungu_name String? @db.VarChar(45) /// @zod.string.max(45, { message: "sigungu_name은 45자를 초과할 수 없습니다" })
  sido_name String? @db.VarChar(45) /// @zod.string.max(45, { message: "sido_name은 45자를 초과할 수 없습니다" })
}

view v_dept {
  dept_id          Int     @unique @default(0)
  dept_name String @db.VarChar(100) /// @zod.string({ required_error: "dept_name은 필수 입력값입니다" }).min(1).max(100, { message: "dept_name은 100자를 초과할 수 없습니다" })
  parent_dept_id   Int?
  parent_dept_name String? @db.VarChar(100) /// @zod.string.max(100, { message: "parent_dept_name은 100자를 초과할 수 없습니다" })
}

enum location_location_type {
  warehouse
  client_branch
}

enum device_option_location_type {
  warehouse
  device
}

enum user_permission {
  user
  manager
  admin
}

enum device_inspection_log_status {
  normal
  pending
}
